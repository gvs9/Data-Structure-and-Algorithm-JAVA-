public class Solution {
    public int coinchange2(int[] A, int B) {


      int m = A.length;
        int[][] dp = new int[m+1][B+1];
        for(int[] row : dp)
        {
            Arrays.fill(row,-1);
        }
        return coinChange(m,B,A,dp);
    }

    public int coinChange(int i, int j, int[] A, int[][] dp)
    {
        
    if(i == 0 && j == 0) return 1;
        if(i == 0) return 0;
        if(j == 0) return 1;
   
        if(dp[i][j] != -1)
            return dp[i][j];
        if(j >= A[i-1])
            dp[i][j] = coinChange(i-1,j,A,dp)%1000007 + coinChange(i,j-A[i-1],A,dp)%1000007;
        else
            dp[i][j] = coinChange(i-1,j,A,dp)%1000007;

        return dp[i][j]%1000007;
    }
}
