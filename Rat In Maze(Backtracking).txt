public class Solution {
    public int[][] solve(int[][] A) {
        int n=A.length;
        int m=A[0].length;
        int path[][]=new int [n][m];
        traverse(0,0,A,path,n,m);
        return path;
        }
           public boolean traverse(int i, int j, int[][] A, int[][] path, int n, int m) {

        
        if (i + 1 == n && j + 1 == m) {
            
            path[i][j] = A[i][j];
            return true;
        }

        
        if (i < 0 || j < 0 || i >= n || j >= m || A[i][j] == 2 || A[i][j] == 0) {
            return false;
        }

        
        path[i][j] = A[i][j];
        
        A[i][j] = 2;

        if (traverse(i + 1, j, A, path, n, m) || traverse(i, j + 1, A, path, n, m)) {
            return true;
        }
    
        path[i][j] = 0;
        
        A[i][j] = 1;
        return false;
    }

}

